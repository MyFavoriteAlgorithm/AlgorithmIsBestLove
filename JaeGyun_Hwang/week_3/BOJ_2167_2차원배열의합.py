'''
문제
2차원 배열이 주어졌을 때 
(i, j) 위치부터 (x, y) 위치까지에 저장되어 있는 수들의 합을 구하는 프로그램을 작성하시오. 
배열의 (i, j) 위치는 i행 j열을 나타낸다.

입력
첫째 줄에 배열의 크기 N, M(1 ≤ N, M ≤ 300)이 주어진다. 
다음 N개의 줄에는 M개의 정수로 배열이 주어진다. 
배열에 포함되어 있는 수는 절댓값이 10,000보다 작거나 같은 정수이다. 

그 다음 줄에는 합을 구할 부분의 개수 K(1 ≤ K ≤ 10,000)가 주어진다. 
다음 K개의 줄에는 네 개의 정수로 i, j, x, y가 주어진다
(1 ≤ i ≤ x ≤ N, 1 ≤ j ≤ y ≤ M).

출력
K개의 줄에 순서대로 배열의 합을 출력한다. 
배열의 합은 2^31-1보다 작거나 같다.
'''


N, M = map(int,input().split()) #배열 크기 입력

#그냥 for문 돌리면 시간초과. 누적합을 이용해야한다.

array=[]
dp = [] # 각 상태의 값을 점화식으로 한번씩만 계산하게 만든 형태. 

# 배열 입력
for i in range(N):
    array.append(list(map(int,input().split())))

# N+1, M+1 의 사이즈로 0으로 채운 이중리스트 생성
for i in range(N+1):
    dp.append([0]*(M+1))
# dp[i][j]에  1행1열부터 i행j열까지의 합을 저장할것임
# 답을 구할땐 타겟이전 범위 값을 빼기만 하면됨
# 첫 점화식 발동을 위해 왼쪽끝, 위쪽끝은 0으로 채운다(사이즈1씩 크게 선언)

# 1,1 부터 N,M까지
for i in range(1, N+1):
    for j in range(1, M+1):
        dp[i][j] = array[i-1][j-1] + dp[i][j-1] + dp[i-1][j] -dp[i-1][j-1]
        
K = int(input())
for k in range(K):
    i, j, x, y = map(int,input().split())
    
    print(dp[x][y] - dp[x][j-1] - dp[i-1][y] + dp[i-1][j-1])
        

    