'''
문제:
집에서 시간을 보내던 오영식은 박성원의 부름을 받고 급히 달려왔다. 
박성원이 캠프 때 쓸 N개의 랜선을 만들어야 하는데 너무 바빠서 영식이에게 도움을 청했다.

이미 오영식은 자체적으로 K개의 랜선을 가지고 있다. 
그러나 K개의 랜선은 길이가 제각각이다. 
박성원은 랜선을 모두 N개의 같은 길이의 랜선으로 만들고 싶었기 때문에 
K개의 랜선을 잘라서 만들어야 한다. 

예를 들어 300cm 짜리 랜선에서 140cm 짜리 랜선을 두 개 잘라내면 20cm는 버려야 한다. 
(이미 자른 랜선은 붙일 수 없다.)

편의를 위해 랜선을 자르거나 만들 때 손실되는 길이는 없다고 가정하며, 
기존의 K개의 랜선으로 N개의 랜선을 만들 수 없는 경우는 없다고 가정하자. 

그리고 자를 때는 항상 센티미터 단위로 정수길이만큼 자른다고 가정하자. 
N개보다 많이 만드는 것도 N개를 만드는 것에 포함된다. 

이때 만들 수 있는 최대 랜선의 길이를 구하는 프로그램을 작성하시오.

입력:
첫째 줄에는 오영식이 이미 가지고 있는 랜선의 개수 K, 
그리고 필요한 랜선의 개수 N이 입력된다. 

K는 1이상 10,000이하의 정수이고, N은 1이상 1,000,000이하의 정수이다. 
그리고 항상 K ≦ N 이다. 
그 후 K줄에 걸쳐 이미 가지고 있는 각 랜선의 길이가 센티미터 단위의 정수로 입력된다. 
랜선의 길이는 2^31-1보다 작거나 같은 자연수이다.

출력:
첫째 줄에 N개를 만들 수 있는 랜선의 최대 길이를 센티미터 단위의 정수로 출력한다.

'''
# 랜선수, 필요 랜선 수 입력
LAN_num, needed_LAN_num = map(int, input().split(" "))
LAN_list = []

# 각 랜선 길이 입력, 총 길이 저장
total_length = 0
for i in range(LAN_num):
    LAN_list.append(int(input()))
    total_length += LAN_list[i]

# 이분탐색 시작 : 시작=1, 끝=랜선 최댓값, 시도값(mid)=랜선 중앙값
start = 1
end = max(LAN_list)
mid = (min(LAN_list) + max(LAN_list)) // 2 # (min+max) /2

while(start<=end):
    count = 0
    
    for LAN in LAN_list:
        count = count + LAN // mid
    
    if count >= needed_LAN_num:
        #랜선 수가 더 많이 나옴(랜선길이가 작음): 랜선길이 증가 필요
        # mid+1을 start로, end는 유지, 새 mid는 중앙값
        start = mid+1
        
    else: #랜선 수가 부족함(랜선 길이가 큼): 랜선길이 감소 필요
        # mid-1을 end로, start는 유지, 새 mid는 중앙값
        end = mid-1
    
    mid = (start+end) // 2

print(end)



'''
이분탐색 활용하기

특정한 값을 찾아야 할때, (ex. 68)

최대한 범위를 줄이고, (ex. 1~100)

범위의 중간값으로 탐색 시작. (ex. start with 50)
    비교 후 조건보다 작다 -> 비교한 값을 시작값, 범위 끝을 끝값으로 재탐색
    비교 후 조건보다 크다 -> 비교한 값을 끝값, 범위 시작을 시작값으로 재탐색

탐색값을 정확히 찾아내는게 아닌,
범위를 탐색값 하나로 완전히 좁혀버리는 것이 포인트임

반에 반 씩 좁혀들어가는 개쩌는 탐색 알고리즘,,,

'''